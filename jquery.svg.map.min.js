(function (l) {
    function s() {
        e.onselectstart = function () {
            return!1
        };
        e.unselectable = "on";
        b.css("user-select", "none");
        b.css("-o-user-select", "none");
        b.css("-moz-user-select", "none");
        b.css("-khtml-user-select", "none");
        b.css("-webkit-user-select", "none")
    }

    function t(a) {
        var f = n(a, e);
        b.trigger(m + "move", [f]);
        p = !0;
        if (q) {
            var c = a.offsetX;
            a = a.offsetY;
            var d = b.width(), g = b.height(), d = (e.getAttribute("viewBox") || "0 0 " + d + " " + g).split(" ");
            e.setAttribute("viewBox", [h.x - h.xOffset - c, h.y - h.yOffset - a, d[2], d[3]].join(" "));
            b.trigger(m + "drag", [f])
        }
    }

    function u(a) {
        var f = n(a, e);
        q = !0;
        p = !1;
        var c = (e.getAttribute("viewBox") || "0 0 0 0").split(" ");
        h = {x: a.offsetX, y: a.offsetY, xOffset: -1 * c[0], yOffset: -1 * c[1]};
        b.trigger(m + "mousedown", [f, h])
    }

    function v(a) {
        a = n(a, e);
        !1 === p && b.trigger(m + "click", [a]);
        q = !1;
        b.trigger(m + "mousedown", [a])
    }

    function n(a, b) {
        k.x = a.clientX;
        k.y = a.clientY;
        return null === b ? k.matrixTransform(e.getScreenCTM().inverse()) : k.matrixTransform(b.getScreenCTM().inverse())
    }

    function w(a) {
        var f = l(a.target).data("zoom");
        !0 ===
            g.enableConsoleOutput && (console.groupCollapsed("SVG Zoom"), console.log("zoomFactor", f));
        var c = b.width(), d = b.height();
        a = (e.getAttribute("viewBox") || "0 0 " + c + " " + d).split(" ");
        var h = a[2], k = a[3];
        !0 === g.enableConsoleOutput && (console.log("currentWidth", h), console.log("currentHeight", k));
        c /= g.zoomLevels;
        d /= g.zoomLevels;
        !0 === g.enableConsoleOutput && (console.log("zoomStepWidth", c), console.log("zoomStepHeight", d));
        h /= c;
        k /= d;
        !0 === g.enableConsoleOutput && (console.log("currentStepWidth", h), console.log("currentStepHeight",
            k));
        c *= h + f;
        f = d * (k + f);
        !0 === g.enableConsoleOutput && (console.log("newWidth", c), console.log("newHeight", f));
        1 > c && (c = 1);
        1 > f && (f = 1);
        !0 === g.enableConsoleOutput && console.groupEnd();
        a = [a[0], a[1], Math.floor(c), Math.floor(f)];
        e.setAttribute("viewBox", a.join(" "));
        b.trigger(m + "zoom", [a])
    }

    var q = !1, p = !1, h = {}, g = {}, b, e, k, r, m = "svg_map.";
    l.fn.svgMap = function (a) {
        g = l.extend({zoomLevels: 20, plusButtonText: "+", minusButtonText: "-", enableConsoleOutput: !1}, a);
        return this.filter("svg").each(function () {
            b = l(this);
            e = b.get(0);
            k = e.createSVGPoint();
            s();
            b.wrap('<section id="svg_map_wrapper" style="position: relative" />');
            r = l("#svg_map_wrapper");
            var a = l('<button class="zoom_button" type="button" id="zoom_in" data-zoom="-1">' + g.plusButtonText + "</button>"), c = l('<button class="zoom_button" type="button" id="zoom_out" data-zoom="1">' + g.minusButtonText + "</button>"), d = l('<aside class="zoom_button_container" />');
            d.css({position: "absolute", top: 0, right: 0});
            d.append(a);
            d.append(c);
            r.prepend(d);
            b.on("mousemove", t);
            b.on("mousedown",
                u);
            b.on("mouseup", v);
            r.find(".zoom_button").on("click", w);
            b.trigger(m + "init")
        })
    }
})(jQuery);
